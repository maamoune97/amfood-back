security:
    encoders:
        App\Entity\User:
            algorithm: argon2i
        

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        in_database:
            entity:
                class: App\Entity\User
                property: phone
        
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        registrationAPI:
            pattern: ^/api/users
            anonymous: true
            stateless: true
            methods: [POST] 

        loginAPI:
            pattern:  ^/api/login
            provider: in_database
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            provider: in_database
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        restaurantManager:
            pattern:   ^/restaurant/manager
            anonymous: true
            provider: in_database

            form_login:
                login_path: restaurant_manager_login
                check_path: restaurant_manager_login
                default_target_path: restaurant_manager_order_index
            
            logout:
                path: restaurant_manager_logout
                target: restaurant_manager_login


        main:
            anonymous: lazy
            provider: in_database
        
            form_login:
                login_path: account_login
                check_path: account_login
                default_target_path: home_index
                
            
            logout:
                path: account_logout
                target: account_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/islands, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/cities, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/articles, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/restaurants, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users, roles: IS_AUTHENTICATED_FULLY, methods: [GET, PUT, DELETE, PATCH] }
        - { path: ^/api/orders, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/deliveries, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/restaurant/manager/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/restaurant/manager, roles: ROLE_MANAGER }
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
